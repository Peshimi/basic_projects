==== Installation and configuration Wordpress on two machines (two public servers) ====

a) Cingwin and AWS

  - $[] cd .ssh
  - $[] ssh-keygen
   => enter file in which to save the key: [name]
  - $[] cat [name].pub
   => copy this into aws account in Key Pairs -> Actions -> Import key pair
   => create 2 instances on Ubuntu 20.04 LTS and load this key pair
   | Choose Instance Type: t2.small will work in this example;
   | Configure Instance Details: choose 2 instances;
   | Add storage: select 32 GB size of storage;
   | Add tags: skip this one;
   | Configure Security Group: to SHH port add three more rules: port 80 for HTTP, port 443 for HTTPS and port 3306 for MySQL.
   | Choose 0.0.0.0/0 CIDR for all of the ports;
   | Review Instance and Launch
  - $[] ssh-add ~/.ssh/[name]
   => the key will be added to the agent .ssh
  - $[] cd ~
  - $[] vim .bashrc
   => at the end paste command: eval `ssh-agent -s`
      Eval is used to execute arguments as a shell command- it combines arguments into a single string and
      uses it as an input to the shell and execute the commands. It allows key agent to use ssh-add command automatically.
  - $[] ssh ubuntu@public_ip_adress


b) Installation process

  # APACHE (#1_machine)
  - []$ sudo apt-get update => update the repository
  - []$ sudo apt-get install apache2
  - []$ sudo ufw app list => list all currently available UFW application profiles
    | 'Apache' opens only port 80 |
    | 'Apache Full' opens port 80 and 443 |
    | 'Apache Secure' opens only port 443 |
  - []$ sudo ufw allow in "Apache Full" => allow traffic on ports 80 and 443
  - []$ sudo ufw status => if status is inactive, use command:
    []$ sudo ufw enable
    => if the SSH option is not active, please use command:
    []$ sudo ufw allow in "ssh"
  - []$ systemctl status apache2 => check is apache server running

  # PHP (#1_machine)
  - []$ sudo apt install php libapache2-mod-php php-mysql
  - []$ sudo apt install php-curl php-gd php-mbstring php-xml php-xmlrpc php-soap php-intl php-zip
  - []$ sudo systemctl restart apache2

  # MYSQL (#2_machine)
  # *If you want to jump between two machines, use tmux command and:
    => ctrl+b and c to create a new window
    => ctrl+b and n to change current window
  - []$ sudo apt install mysql-server
  - []$ sudo mysql_secure_installation => configuration of the validate password plugin, there are 3 levels:
    | LOW    Length >= 8 |
    | MEDIUM Length >= 8, numeric, mixed case, special characters |
    | STRONG Length >= 8, numeric, mixed case, special characters and dictionary file |
    => To choose a level of password validation policy enter: 0 (low) 1 (medium) 2 (strong) #kawusiatak
  - []$ sudo mysql => test if I am able to log in to the MySQL console
  - mysql> exit

  # MYSQL CONFIGURATION (#2_machine)
   - []$ sudo ufw app list
   - []$ sudo ufw allow in "OpenSSH"
   - []$ sudo ufw allow in "mysql"
   - []$ sudo ufw enable
   - []$ vim /etc/mysql/mysql.conf.d/mysqld.cnf
     => change all 127.0.0.1 parameters to 0.0.0.0
   - []$ restart mysql

  # CREATING A MYSQL DATABASE AND USER FOR WORDPRESS (#2_machine)
  - []$ sudo mysql -u root
  - mysql> ALTER USER 'root'@'localhost' IDENTIFIED BY 'new_password'; #kawusiaok
  - mysql> CREATE DATABASE wordpress DEFAULT CHARACTER SET uft8 COLLATE utf8_unicode_ci;
  - mysql> CREATE USER 'wordpress_user'@'%' IDENTIFIED BY 'password'; #kawusiamegaok
  - mysql> GRANT ALL ON wordpress.* TO 'wordpress_user'@'%';
  - mysql> FLUSH PRIVILEGES; => use it for update the database statement- our MySQL server will know about recent changes we've made
  - mysql> exit;

  # ADJUSTING APACHE'S CONFIGURATION TO ALLOW FOR .HTACCESS OVERRIDES AND REWRITES (#1_machine)
  - []$ sudo mkdir /var/www/wordpress
  - []$ sudo chown -R $USER:$USER /var/www/wordpress
  - []$ sudo vim /etc/apache2/sites-available/wordpress.conf
    |    <VirtualHost *:80>
    |        ServerName wordpress
    |        ServerAlias www.wordpress
    |        ServerAdmin nadiamaster@#2_machine_ip_address
    |        DocumentRoot /var/www/wordpress
    |        ErrorLog ${APACHE_LOG_DIR}/error.log
    |        CustomLog ${APACHE_LOG_DIR}/access.log combined
    |   <Directory /var/www/wordpress/>
    |        AllowOverride All
    |   </Directory>
    |   </VirtualHost>
  - []$ sudo a2ensite wordpress
  - []$ sudo systemctl reload apache2
  - []$ sudo a2dissite 000-default
  - []$ sudo a2enmod rewrite => the command calls a script that enables the specified module within the Apache configuration
  - []$ sudo systemctl restart apache2
  - []$ sudo apache2ctl configtest  

  # DOWNLOADING AND CONFIGURING WORDPRESS (#1_machine)
  - []$ cd /tmp
  - []$ curl -O https://wordpress.org/latest.tar.gz
  - []$ tar xzvf latest.tar.gz
  - []$ touch /tmp/wordpress/.htaccess
  - []$ cp /tmp/wordpress/wp-config-sample.php /tmp/wordpress/wp-config.php => we will copy a sample configuration file to the filename that Wordpress reads
  - []$ mkdir /tmp/wordpress/wp-content/upgrade 
  - []$ sudo cp -a /tmp/wordpress/. /var/www/wordpress => copy entire contents of the directory into document root
  - []$ cd ..
  - []$ sudo chown -R www-data:www-data /var/www/wordpress
  - []$ sudo find /var/www/wordpress/ -type d -exec chmod 750 {} \;
  - []$ sudo find /var/www/wordpress/ -type f -exec chmod 640 {} \;
  - []$ curl -s https://api.wordpress.org/secret-key/1.1/salt/ => create unique values and paste them to the file
  - []$ sudo vim /var/www/wordpress/wp-config.php
    | define('DB_NAME', 'wordpress' );
    | define( 'DB_USER', 'wordpress_user' );
    | define( 'DB_PASSWORD', 'password' );
    | define( 'DB_HOST', '#2_machine_ip_address' );
    | define( 'DB_CHARSET', 'utf8' );
    | define( 'DB_COLLATE', '' );
    | . . .
    | define('FS_METHOD', 'direct');

  # Open your site by typing http://wordpress_public_ip_address
